// Generated by CoffeeScript 1.10.0
var window_handlers, window_number, zIndex;

$('#dock').on('mouseover', function(e) {
  var li, prevLi, target;
  target = e.target;
  if (target.getAttribute('src')) {
    li = target.parentNode.parentNode;
    prevLi = li.previousElementSibling;
    if (prevLi) {
      prevLi.className = 'prev';
    }
    target.addEventListener('mouseout', (function() {
      if (prevLi) {
        prevLi.removeAttribute('class');
      }
    }), false);
  }
});

zIndex = function(e) {
  return parseInt((e.css ? e.css('z-index') : e.style.zIndex)) || 0;
};

$('#root').sortable({
  handle: '.title'
});

window_handlers = function(w) {
  w.find('[title=close]').click(function() {
    return w.remove();
  });
  return w.find('[title=maximize]').click(function() {
    var current;
    current = w[0];
    return $('.window').each(function(i, w) {
      if (current === w) {
        return $(w).show();
      } else {
        return $(w).toggle();
      }
    });
  });
};

window_handlers($('.window'));

window_number = 1;

$('#new_window').click(function() {
  var new_window;
  new_window = $('.window').last().clone().appendTo('#root');
  new_window.find('.controls > .title').html(window_number += 1);
  return window_handlers(new_window);
});

$('#arrange').click(function() {
  return $('.window').toArray().sort(function(a, b) {
    return zIndex(a) - zIndex(b);
  }).forEach((function(w) {
    w.style.removeProperty('left');
    w.style.removeProperty('top');
    return $('#root').append(w);
  }));
});

//# sourceMappingURL=ui.js.map
